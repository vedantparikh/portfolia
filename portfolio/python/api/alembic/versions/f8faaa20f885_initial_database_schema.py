"""Initial database schema

Revision ID: f8faaa20f885
Revises: 
Create Date: 2025-08-26 23:27:25.679215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f8faaa20f885'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_user_profiles_country', table_name='user_profiles')
    op.drop_index('idx_user_profiles_currency', table_name='user_profiles')
    op.drop_index('idx_user_profiles_user_id', table_name='user_profiles')
    op.drop_index('ix_user_profiles_id', table_name='user_profiles')
    op.drop_table('user_profiles')
    op.drop_index('idx_assets_active', table_name='assets')
    op.drop_index('idx_assets_country', table_name='assets')
    op.drop_index('idx_assets_currency', table_name='assets')
    op.drop_index('idx_assets_exchange', table_name='assets')
    op.drop_index('idx_assets_sector', table_name='assets')
    op.drop_index('idx_assets_symbol', table_name='assets')
    op.drop_index('idx_assets_type', table_name='assets')
    op.drop_index('ix_assets_id', table_name='assets')
    op.drop_index('ix_assets_symbol', table_name='assets')
    op.drop_table('assets')
    op.drop_index('idx_manual_entries_batch', table_name='manual_entries')
    op.drop_index('idx_manual_entries_method', table_name='manual_entries')
    op.drop_index('idx_manual_entries_transaction_id', table_name='manual_entries')
    op.drop_index('idx_manual_entries_user_id', table_name='manual_entries')
    op.drop_index('idx_manual_entries_validation', table_name='manual_entries')
    op.drop_index('ix_manual_entries_id', table_name='manual_entries')
    op.drop_table('manual_entries')
    op.drop_index('idx_users_active', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_market_indices_active', table_name='market_indices')
    op.drop_index('idx_market_indices_category', table_name='market_indices')
    op.drop_index('idx_market_indices_country', table_name='market_indices')
    op.drop_index('idx_market_indices_symbol', table_name='market_indices')
    op.drop_index('ix_market_indices_id', table_name='market_indices')
    op.drop_index('ix_market_indices_symbol', table_name='market_indices')
    op.drop_table('market_indices')
    op.drop_index('idx_portfolios_active', table_name='portfolios')
    op.drop_index('idx_portfolios_currency', table_name='portfolios')
    op.drop_index('idx_portfolios_public', table_name='portfolios')
    op.drop_index('idx_portfolios_user_id', table_name='portfolios')
    op.drop_index('ix_portfolios_id', table_name='portfolios')
    op.drop_table('portfolios')
    op.drop_index('idx_asset_prices_asset_date', table_name='asset_prices')
    op.drop_index('idx_asset_prices_asset_id', table_name='asset_prices')
    op.drop_index('idx_asset_prices_date', table_name='asset_prices')
    op.drop_index('ix_asset_prices_id', table_name='asset_prices')
    op.drop_table('asset_prices')
    op.drop_index('idx_transactions_asset_date', table_name='transactions')
    op.drop_index('idx_transactions_asset_id', table_name='transactions')
    op.drop_index('idx_transactions_date', table_name='transactions')
    op.drop_index('idx_transactions_portfolio_date', table_name='transactions')
    op.drop_index('idx_transactions_portfolio_id', table_name='transactions')
    op.drop_index('idx_transactions_status', table_name='transactions')
    op.drop_index('idx_transactions_type', table_name='transactions')
    op.drop_index('ix_transactions_id', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('idx_portfolio_assets_asset_id', table_name='portfolio_assets')
    op.drop_index('idx_portfolio_assets_portfolio_asset', table_name='portfolio_assets')
    op.drop_index('idx_portfolio_assets_portfolio_id', table_name='portfolio_assets')
    op.drop_index('ix_portfolio_assets_id', table_name='portfolio_assets')
    op.drop_table('portfolio_assets')
    op.drop_index('idx_user_sessions_active', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires_at', table_name='user_sessions')
    op.drop_index('idx_user_sessions_session_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_index('ix_user_sessions_id', table_name='user_sessions')
    op.drop_index('ix_user_sessions_session_id', table_name='user_sessions')
    op.drop_table('user_sessions')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refresh_token', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('device_info', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('last_used', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_sessions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_sessions_pkey')
    )
    op.create_index('ix_user_sessions_session_id', 'user_sessions', ['session_id'], unique=True)
    op.create_index('ix_user_sessions_id', 'user_sessions', ['id'], unique=False)
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_index('idx_user_sessions_session_id', 'user_sessions', ['session_id'], unique=False)
    op.create_index('idx_user_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_user_sessions_active', 'user_sessions', ['is_active'], unique=False)
    op.create_table('portfolio_assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('cost_basis', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('cost_basis_total', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('current_value', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('unrealized_pnl', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('unrealized_pnl_percent', sa.NUMERIC(precision=10, scale=4), autoincrement=False, nullable=True),
    sa.Column('last_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], name='portfolio_assets_asset_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name='portfolio_assets_portfolio_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='portfolio_assets_pkey')
    )
    op.create_index('ix_portfolio_assets_id', 'portfolio_assets', ['id'], unique=False)
    op.create_index('idx_portfolio_assets_portfolio_id', 'portfolio_assets', ['portfolio_id'], unique=False)
    op.create_index('idx_portfolio_assets_portfolio_asset', 'portfolio_assets', ['portfolio_id', 'asset_id'], unique=True)
    op.create_index('idx_portfolio_assets_asset_id', 'portfolio_assets', ['asset_id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('transactions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_type', postgresql.ENUM('BUY', 'SELL', 'DIVIDEND', 'SPLIT', 'MERGER', 'SPIN_OFF', 'RIGHTS_ISSUE', 'STOCK_OPTION_EXERCISE', 'TRANSFER_IN', 'TRANSFER_OUT', 'FEE', 'OTHER', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'FAILED', name='transactionstatus'), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.NUMERIC(precision=20, scale=8), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('total_amount', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('transaction_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('settlement_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reference_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fees', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('taxes', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], name='transactions_asset_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], name='transactions_portfolio_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_transactions_id', 'transactions', ['id'], unique=False)
    op.create_index('idx_transactions_type', 'transactions', ['transaction_type'], unique=False)
    op.create_index('idx_transactions_status', 'transactions', ['status'], unique=False)
    op.create_index('idx_transactions_portfolio_id', 'transactions', ['portfolio_id'], unique=False)
    op.create_index('idx_transactions_portfolio_date', 'transactions', ['portfolio_id', 'transaction_date'], unique=False)
    op.create_index('idx_transactions_date', 'transactions', ['transaction_date'], unique=False)
    op.create_index('idx_transactions_asset_id', 'transactions', ['asset_id'], unique=False)
    op.create_index('idx_transactions_asset_date', 'transactions', ['asset_id', 'transaction_date'], unique=False)
    op.create_table('asset_prices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('open_price', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('high_price', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('low_price', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('close_price', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=False),
    sa.Column('volume', sa.NUMERIC(precision=20, scale=0), autoincrement=False, nullable=True),
    sa.Column('adjusted_close', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('dividend_amount', sa.NUMERIC(precision=20, scale=4), autoincrement=False, nullable=True),
    sa.Column('split_ratio', sa.NUMERIC(precision=10, scale=6), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], name='asset_prices_asset_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='asset_prices_pkey')
    )
    op.create_index('ix_asset_prices_id', 'asset_prices', ['id'], unique=False)
    op.create_index('idx_asset_prices_date', 'asset_prices', ['date'], unique=False)
    op.create_index('idx_asset_prices_asset_id', 'asset_prices', ['asset_id'], unique=False)
    op.create_index('idx_asset_prices_asset_date', 'asset_prices', ['asset_id', 'date'], unique=True)
    op.create_table('portfolios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('portfolios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='portfolios_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='portfolios_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_portfolios_id', 'portfolios', ['id'], unique=False)
    op.create_index('idx_portfolios_user_id', 'portfolios', ['user_id'], unique=False)
    op.create_index('idx_portfolios_public', 'portfolios', ['is_public'], unique=False)
    op.create_index('idx_portfolios_currency', 'portfolios', ['currency'], unique=False)
    op.create_index('idx_portfolios_active', 'portfolios', ['is_active'], unique=False)
    op.create_table('market_indices',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='market_indices_pkey')
    )
    op.create_index('ix_market_indices_symbol', 'market_indices', ['symbol'], unique=True)
    op.create_index('ix_market_indices_id', 'market_indices', ['id'], unique=False)
    op.create_index('idx_market_indices_symbol', 'market_indices', ['symbol'], unique=False)
    op.create_index('idx_market_indices_country', 'market_indices', ['country'], unique=False)
    op.create_index('idx_market_indices_category', 'market_indices', ['category'], unique=False)
    op.create_index('idx_market_indices_active', 'market_indices', ['is_active'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_active', 'users', ['is_active'], unique=False)
    op.create_table('manual_entries',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entry_method', postgresql.ENUM('MANUAL', 'PDF_IMPORT', 'API_IMPORT', 'CSV_IMPORT', name='entrymethod'), autoincrement=False, nullable=False),
    sa.Column('validation_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('validation_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('source_file', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('import_batch_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], name='manual_entries_transaction_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='manual_entries_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='manual_entries_pkey'),
    sa.UniqueConstraint('transaction_id', name='manual_entries_transaction_id_key')
    )
    op.create_index('ix_manual_entries_id', 'manual_entries', ['id'], unique=False)
    op.create_index('idx_manual_entries_validation', 'manual_entries', ['validation_status'], unique=False)
    op.create_index('idx_manual_entries_user_id', 'manual_entries', ['user_id'], unique=False)
    op.create_index('idx_manual_entries_transaction_id', 'manual_entries', ['transaction_id'], unique=False)
    op.create_index('idx_manual_entries_method', 'manual_entries', ['entry_method'], unique=False)
    op.create_index('idx_manual_entries_batch', 'manual_entries', ['import_batch_id'], unique=False)
    op.create_table('assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('asset_type', postgresql.ENUM('STOCK', 'BOND', 'ETF', 'MUTUAL_FUND', 'COMMODITY', 'CRYPTO', 'REAL_ESTATE', 'OTHER', name='assettype'), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('exchange', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('isin', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('cusip', sa.VARCHAR(length=9), autoincrement=False, nullable=True),
    sa.Column('sector', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='assets_pkey')
    )
    op.create_index('ix_assets_symbol', 'assets', ['symbol'], unique=True)
    op.create_index('ix_assets_id', 'assets', ['id'], unique=False)
    op.create_index('idx_assets_type', 'assets', ['asset_type'], unique=False)
    op.create_index('idx_assets_symbol', 'assets', ['symbol'], unique=False)
    op.create_index('idx_assets_sector', 'assets', ['sector'], unique=False)
    op.create_index('idx_assets_exchange', 'assets', ['exchange'], unique=False)
    op.create_index('idx_assets_currency', 'assets', ['currency'], unique=False)
    op.create_index('idx_assets_country', 'assets', ['country'], unique=False)
    op.create_index('idx_assets_active', 'assets', ['is_active'], unique=False)
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('currency_preference', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.Column('language_preference', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('notification_preferences', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_profiles_pkey'),
    sa.UniqueConstraint('user_id', name='user_profiles_user_id_key')
    )
    op.create_index('ix_user_profiles_id', 'user_profiles', ['id'], unique=False)
    op.create_index('idx_user_profiles_user_id', 'user_profiles', ['user_id'], unique=False)
    op.create_index('idx_user_profiles_currency', 'user_profiles', ['currency_preference'], unique=False)
    op.create_index('idx_user_profiles_country', 'user_profiles', ['country'], unique=False)
    # ### end Alembic commands ###
