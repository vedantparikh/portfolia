services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: portfolia_postgres
    environment:
      POSTGRES_DB: portfolio
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d portfolio"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - portfolia_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: portfolia_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - portfolia_network

  # Portfolia API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolia_api
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/portfolio
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    networks:
      - portfolia_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: portfolia_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@portfolia.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - portfolia_network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  portfolia_network:
    driver: bridge
